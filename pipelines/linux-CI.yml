
trigger:
- master

jobs:
- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      py36:
        python.version: '3.6'
        onnx_ml: 0
        onnx_verify_proto: 0
      py36-verify:
        python.version: '3.6'
        onnx_ml: 0
        onnx_verify_proto: 1
      py37:
        python.version: '3.7'
        onnx_ml: 0
        onnx_verify_proto: 0
    maxParallel: 3

  steps:
  - script: conda create --yes --quiet --name py$(python.version) -c conda-forge python=$(python.version) numpy libprotobuf=3.11.3 protobuf=3.11.3
    displayName: Create Anaconda environment

  - script: |
      python -m pip install --upgrade pip
      python -m pip install --quiet -U dos2unix
      git submodule update --init --recursive
      set ONNX_ML=${onnx_ml}
      set ONNX_BUILD_TESTS=1
      set ONNX_VERIFY_PROTO3=${onnx_verify_proto}
      set USE_MSVC_STATIC_RUNTIME=0
      set CMAKE_ARGS=-DONNX_USE_PROTOBUF_SHARED_LIBS=ON -DProtobuf_USE_STATIC_LIBS=OFF -DONNX_USE_LITE_PROTO=ON
      python setup.py --quiet install
    displayName: 'Install ONNX and dependencies'


  - script: |
      pip install --quiet pytest nbval
      pytest
      pip install --quiet flake8
      flake8
      find . -type f -regextype posix-extended -regex '.*\.(py|cpp|md|h|cc|proto|proto3|in)' | xargs dos2unix --quiet
      git status
      git diff --exit-code
      python onnx/defs/gen_doc.py
      python onnx/gen_proto.py -l
      python onnx/gen_proto.py -l --ml
      python onnx/backend/test/stat_coverage.py
      backend-test-tools generate-data
      git status
      git diff --exit-code
    displayName: 'Run ONNX tests'