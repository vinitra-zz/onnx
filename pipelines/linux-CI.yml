
trigger:
- master

jobs:
- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      py27:
        PB_VERSION: 2.6.1
        PYTHON_VERSION: 2.7
        ONNX_ML: 0
    maxParallel: 3

  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends dos2unix

      # install protobuf
      mkdir -p "$pb_dir"
      wget -qO- "https://github.com/google/protobuf/releases/download/v${PB_VERSION}/protobuf-${PB_VERSION}.tar.gz" | tar -xz -C "$pb_dir" --strip-components 1
      ccache -z
      cd "$pb_dir" && ./configure && make -j${NUMCORES} && make check && sudo make install && sudo ldconfig && cd -
      ccache -s

      # Update all existing python packages
      python -m pip install --upgrade pip
      python -m pip install --quiet -U pip setuptools
      python -m pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U --quiet

    displayName: 'Install dependencies'


  - script: |
      script_path=$(python -c "import os; import sys; print(os.path.realpath(sys.argv[1]))" "${BASH_SOURCE[0]}")
      source "${script_path%/*}/setup.sh"

      export ONNX_BUILD_TESTS=1
      pip install --quiet protobuf numpy

      export CMAKE_ARGS="-DONNX_WERROR=ON"
      if [[ -n "USE_LITE_PROTO" ]]; then
          export CMAKE_ARGS="${CMAKE_ARGS} -DONNX_USE_LITE_PROTO=ON"
      fi
      export CMAKE_ARGS="${CMAKE_ARGS} -DONNXIFI_DUMMY_BACKEND=ON"
      export ONNX_NAMESPACE=ONNX_NAMESPACE_FOO_BAR_FOR_CI

      if [ "${ONNX_DEBUG}" == "1" ]; then
        export DEBUG=1
      fi

      time python setup.py --quiet bdist_wheel --universal --dist-dir .
      find . -maxdepth 1 -name "*.whl" -ls -exec pip install {} \;
      displayName: 'install onnx'


  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()